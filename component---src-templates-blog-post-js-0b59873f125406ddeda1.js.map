{"version":3,"sources":["webpack:///./src/components/postfooter.js","webpack:///./src/templates/blog-post.js"],"names":["PostFooter","props","data","_2998135601","_data$site$siteMetada","site","siteMetadata","author","social","react_default","a","createElement","style","display","alignItems","marginBottom","rhythm","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","className","href","twitter","rel","target","BlogPostTemplate","render","post","this","markdownRemark","siteTitle","title","_this$props$pageConte","pageContext","previous","next","readingTime","coauthor","frontmatter","coauthor_link","coauthor_element","console","log","layout","location","seo","description","excerpt","marginTop","Object","assign","scale","date","text","dangerouslySetInnerHTML","__html","html","postfooter","notwitch","flexWrap","justifyContent","listStyle","padding","gatsby_browser_entry","to","fields","slug","React","Component","pageQuery"],"mappings":"gLAwEeA,EA3DI,SAACC,GAClB,IAAMC,EAAOC,EAAAD,KADeE,EAqBDF,EAAKG,KAAKC,aAA7BC,EArBoBH,EAqBpBG,OAAQC,EArBYJ,EAqBZI,OAChB,OACEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLC,QAAO,OACPC,WAAY,SACZC,aAAcC,YAAO,OAGvBP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEQ,MAAOhB,EAAKiB,OAAOC,gBAAgBF,MACnCG,IAAKd,EACLK,MAAO,CACLU,YAAaN,YAAO,IACpBD,aAAc,EACdQ,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAGhBf,EAAAC,EAAAC,cAAA,KAAGe,UAAU,kBAAb,mBAEEjB,EAAAC,EAAAC,cAAA,KAAGgB,KAAI,uBAAyBnB,EAAOoB,QAAWC,IAAI,sBAAsBC,OAAO,UAAnF,aAFF,kBAMErB,EAAAC,EAAAC,cAAA,KAAGgB,KAAI,mBAAsBG,OAAO,UAApC,gBANF,IAUErB,EAAAC,EAAAC,cAAA,0FCvDFoB,kLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKjC,MAAMC,KAAKiC,eACvBC,EAAYF,KAAKjC,MAAMC,KAAKG,KAAKC,aAAa+B,MAF7CC,EAGiCJ,KAAKjC,MAAMsC,YAA3CC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KAAMC,EAHjBJ,EAGiBI,YACpBC,EAAWT,KAAKjC,MAAMC,KAAKiC,eAAeS,YAAYD,SACtDE,EAAgBX,KAAKjC,MAAMC,KAAKiC,eAAeS,YAAYC,cAE3DC,EAAmB,KASvB,OARIH,GAAYE,EACdC,EAAoBrC,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGgB,KAAMkB,EAAef,OAAO,SAASD,IAAI,gCAAgCc,KACpGA,IACTG,EAAoBrC,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,SAAIgC,KAIpCI,QAAQC,IAAI,UAAWd,KAAKjC,MAAMC,KAAKiC,eAAeS,aAEpDnC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAQC,SAAUhB,KAAKjC,MAAMiD,SAAUb,MAAOD,GAC5C3B,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACEd,MAAOJ,EAAKW,YAAYP,MACxBe,YAAanB,EAAKW,YAAYQ,aAAenB,EAAKoB,UAEpD5C,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACL0C,UAAWtC,YAAO,GAClBD,aAAc,IAGfkB,EAAKW,YAAYP,OAEpB5B,EAAAC,EAAAC,cAAA,KACEC,MAAK2C,OAAAC,OAAA,GACAC,aAAM,IADN,CAEH5C,QAAO,QACPE,aAAcC,YAAO,MAGtBiB,EAAKW,YAAYc,KAPpB,MAO6BhB,EAAYiB,KAPzC,SAOoDlD,EAAAC,EAAAC,cAAA,sBAPpD,IAOsEmC,GAEtErC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,cAAckC,wBAAyB,CAAEC,OAAQ5B,EAAKW,YAAYQ,eACjF3C,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WAAWd,MAAO,CAC/B0C,UAAWtC,YAAO,IACjB4C,wBAAyB,CAAEC,OAAQ5B,EAAK6B,QAC3CrD,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLG,aAAcC,YAAO,MAGzBP,EAAAC,EAAAC,cAACoD,EAAD,CAAYC,SAAU9B,KAAKjC,MAAMC,KAAKiC,eAAeS,YAAYoB,WAEjEvD,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLC,QAAO,OACPoD,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGX3D,EAAAC,EAAAC,cAAA,UACG6B,GACC/B,EAAAC,EAAAC,cAAC0D,EAAA,KAAD,CAAMC,GAAI9B,EAAS+B,OAAOC,KAAM3C,IAAI,QAApC,KACKW,EAASI,YAAYP,QAI9B5B,EAAAC,EAAAC,cAAA,UACG8B,GACChC,EAAAC,EAAAC,cAAC0D,EAAA,KAAD,CAAMC,GAAI7B,EAAK8B,OAAOC,KAAM3C,IAAI,QAC7BY,EAAKG,YAAYP,MADpB,aArEiBoC,IAAMC,WAkFxBC,GAFE5C,YAEO","file":"component---src-templates-blog-post-js-0b59873f125406ddeda1.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst PostFooter = (props) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        alignItems: \"center\",\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p className=\"PostFooterBody\">\n        Comments? Tweet&nbsp;\n        <a href={`https://twitter.com/${social.twitter}`} rel=\"noopener noreferrer\" target=\"_blank\">\n           @croloris\n        </a> \n        &nbsp;and check out&nbsp;\n        <a href={`https://zig.show`} target=\"_blank\">\n        Zig SHOWTIME\n        </a> \n        !\n        <br/> \n      </p>\n    </div>\n  )\n}\n\nexport default PostFooter\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport PostFooter from \"../components/postfooter\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Helmet from \"react-helmet\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nimport \"./blog-post.css\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next, readingTime } = this.props.pageContext\n    var coauthor = this.props.data.markdownRemark.frontmatter.coauthor;\n    let coauthor_link = this.props.data.markdownRemark.frontmatter.coauthor_link;\n\n    var coauthor_element = null;\n    if (coauthor && coauthor_link) {\n      coauthor_element = (<span>and <b><a href={coauthor_link} target=\"_blank\" rel=\"nofollow noopener noreferrer\">{coauthor}</a></b></span>);\n    } else if (coauthor) {\n      coauthor_element = (<span>and <b>{coauthor}</b></span>);\n    }\n    \n\n    console.log(\"props= \", this.props.data.markdownRemark.frontmatter)\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1\n          style={{\n            marginTop: rhythm(1),\n            marginBottom: 0,\n          }}\n        >\n          {post.frontmatter.title}\n        </h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n          }}\n        >\n          {post.frontmatter.date} • {readingTime.text} • by <b>Loris Cro</b> {coauthor_element}\n        </p>\n        <div className=\"Description\" dangerouslySetInnerHTML={{ __html: post.frontmatter.description}}></div>\n        <div className=\"PostBody\" style={{\n          marginTop: rhythm(1),\n        }} dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <PostFooter notwitch={this.props.data.markdownRemark.frontmatter.notwitch} />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        notwitch\n        coauthor_link\n        coauthor\n      }\n    }\n  }\n`\n"],"sourceRoot":""}