{"version":3,"sources":["webpack:///./src/components/postfooter.js","webpack:///./src/templates/blog-post.js"],"names":["PostFooter","props","data","_2998135601","_data$site$siteMetada","site","siteMetadata","author","social","react_default","a","createElement","style","display","marginBottom","rhythm","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","className","href","twitter","rel","target","notwitch","marginTop","fontWeight","BlogPostTemplate","render","post","this","markdownRemark","siteTitle","title","_this$props$pageConte","pageContext","previous","next","readingTime","console","log","frontmatter","layout","location","seo","description","excerpt","Object","assign","scale","date","text","dangerouslySetInnerHTML","__html","html","postfooter","flexWrap","justifyContent","listStyle","padding","gatsby_browser_entry","to","fields","slug","React","Component","pageQuery"],"mappings":"gLA+EeA,EAlEI,SAACC,GAClB,IAAMC,EAAOC,EAAAD,KADeE,EAqBDF,EAAKG,KAAKC,aAA7BC,EArBoBH,EAqBpBG,OAAQC,EArBYJ,EAqBZI,OAChB,OACEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLC,QAAO,OACPC,aAAcC,YAAO,OAGvBN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,MAAOf,EAAKgB,OAAOC,gBAAgBF,MACnCG,IAAKb,EACLK,MAAO,CACLS,YAAaN,YAAO,IACpBD,aAAc,EACdQ,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAGhBd,EAAAC,EAAAC,cAAA,KAAGc,UAAU,kBAAb,0DAEEhB,EAAAC,EAAAC,cAAA,KAAGe,KAAI,uBAAyBlB,EAAOmB,QAAWC,IAAI,sBAAsBC,OAAO,UAAnF,aAFF,IAMEpB,EAAAC,EAAAC,cAAA,YAGGV,EAAM6B,UACPrB,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAACmB,UAAW,EAAGC,WAAY,MAArC,mBAEEvB,EAAAC,EAAAC,cAAA,KAAGe,KAAK,gCAAgCE,IAAI,sBAAsBC,OAAO,UAAzE,mCAFF,2ICtDJI,kLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKnC,MAAMC,KAAKmC,eACvBC,EAAYF,KAAKnC,MAAMC,KAAKG,KAAKC,aAAaiC,MAF7CC,EAGiCJ,KAAKnC,MAAMwC,YAA3CC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KAAMC,EAHjBJ,EAGiBI,YAExB,OADAC,QAAQC,IAAI,UAAWV,KAAKnC,MAAMC,KAAKmC,eAAeU,aAEpDtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAQC,SAAUb,KAAKnC,MAAMgD,SAAUV,MAAOD,GAC5C7B,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEX,MAAOJ,EAAKY,YAAYR,MACxBY,YAAahB,EAAKY,YAAYI,aAAehB,EAAKiB,UAEpD3C,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLmB,UAAWhB,YAAO,GAClBD,aAAc,IAGfqB,EAAKY,YAAYR,OAEpB9B,EAAAC,EAAAC,cAAA,KACEC,MAAKyC,OAAAC,OAAA,GACAC,aAAM,IADN,CAEH1C,QAAO,QACPC,aAAcC,YAAO,MAGtBoB,EAAKY,YAAYS,KAPpB,MAO6BZ,EAAYa,KAPzC,mBASAhD,EAAAC,EAAAC,cAAA,OAAKc,UAAU,cAAciC,wBAAyB,CAAEC,OAAQxB,EAAKY,YAAYI,eACjF1C,EAAAC,EAAAC,cAAA,OAAKc,UAAU,WAAWb,MAAO,CAC/BmB,UAAWhB,YAAO,IACjB2C,wBAAyB,CAAEC,OAAQxB,EAAKyB,QAC3CnD,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLE,aAAcC,YAAO,MAGzBN,EAAAC,EAAAC,cAACkD,EAAD,CAAY/B,SAAUM,KAAKnC,MAAMC,KAAKmC,eAAeU,YAAYjB,WAEjErB,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLC,QAAO,OACPiD,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGXxD,EAAAC,EAAAC,cAAA,UACG+B,GACCjC,EAAAC,EAAAC,cAACuD,EAAA,KAAD,CAAMC,GAAIzB,EAAS0B,OAAOC,KAAMzC,IAAI,QAApC,KACKc,EAASK,YAAYR,QAI9B9B,EAAAC,EAAAC,cAAA,UACGgC,GACClC,EAAAC,EAAAC,cAACuD,EAAA,KAAD,CAAMC,GAAIxB,EAAKyB,OAAOC,KAAMzC,IAAI,QAC7Be,EAAKI,YAAYR,MADpB,aA1DiB+B,IAAMC,WAuExBC,GAFEvC,YAEO","file":"component---src-templates-blog-post-js-3da018a88a4d7541d3f9.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst PostFooter = (props) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p className=\"PostFooterBody\">\n        Thank you very much for reading! Got a comment? Tweet &nbsp;\n        <a href={`https://twitter.com/${social.twitter}`} rel=\"noopener noreferrer\" target=\"_blank\">\n           @croloris\n        </a> \n        . \n        <br/>\n        \n        { \n          !props.notwitch && (\n          <p style={{marginTop: 5, fontWeight: 600}}>\n            P.S. I started &nbsp; \n            <a href=\"https://twitch.tv/kristoff_it\" rel=\"noopener noreferrer\" target=\"_blank\">\n              live coding regularly on Twitch\n            </a>, \n              follow the channel to be notified when I go live next!\n          </p>)\n        }\n         \n      </p>\n    </div>\n  )\n}\n\nexport default PostFooter\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport PostFooter from \"../components/postfooter\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Helmet from \"react-helmet\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nimport \"./blog-post.css\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next, readingTime } = this.props.pageContext\n    console.log(\"props= \", this.props.data.markdownRemark.frontmatter)\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1\n          style={{\n            marginTop: rhythm(1),\n            marginBottom: 0,\n          }}\n        >\n          {post.frontmatter.title}\n        </h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n          }}\n        >\n          {post.frontmatter.date} • {readingTime.text} • by Loris Cro\n        </p>\n        <div className=\"Description\" dangerouslySetInnerHTML={{ __html: post.frontmatter.description}}></div>\n        <div className=\"PostBody\" style={{\n          marginTop: rhythm(1),\n        }} dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <PostFooter notwitch={this.props.data.markdownRemark.frontmatter.notwitch} />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        notwitch\n      }\n    }\n  }\n`\n"],"sourceRoot":""}